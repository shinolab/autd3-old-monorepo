#pragma once

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <cstdint>

namespace autd3::internal::native_methods {

extern "C" {

[[nodiscard]] void* AUTDDefaultBackend();

[[nodiscard]] void* AUTDGainHoloSDP(void* backend);

void AUTDGainHoloSDPAlpha(void* holo, double alpha);

void AUTDGainHoloSDPLambda(void* holo, double lambda);

void AUTDGainHoloSDPRepeat(void* holo, uint32_t repeat);

[[nodiscard]] void* AUTDGainHoloEVP(void* backend);

void AUTDGainHoloEVPGamma(void* holo, double gamma);

[[nodiscard]] void* AUTDGainHoloGS(void* backend);

void AUTDGainHoloGSRepeat(void* holo, uint32_t repeat);

[[nodiscard]] void* AUTDGainHoloGSPAT(void* backend);

void AUTDGainHoloGSPATRepeat(void* holo, uint32_t repeat);

[[nodiscard]] void* AUTDGainHoloNaive(void* backend);

[[nodiscard]] void* AUTDGainHoloGreedy();

void AUTDGainHoloGreedyPhaseDiv(void* holo, uint32_t div);

[[nodiscard]] void* AUTDGainHoloLM(void* backend);

void AUTDGainHoloLMEps1(void* holo, double eps_1);

void AUTDGainHoloLMEps2(void* holo, double eps_2);

void AUTDGainHoloLMTau(void* holo, double tau);

void AUTDGainHoloLMKMax(void* holo, uint32_t k_max);

void AUTDGainHoloLMInitial(void* holo, const double *ptr, uint64_t len);

void AUTDGainHoloAdd(void* holo, double x, double y, double z, double amp);

void AUTDGainHoloSetDotCareConstraint(void* holo);

void AUTDGainHoloSetNormalizeConstraint(void* holo);

void AUTDGainHoloSetUniformConstraint(void* holo, double value);

void AUTDGainHoloSetClampConstraint(void* holo, double min, double max);

void AUTDDeleteGainHolo(void* holo);

} // extern "C"

} // namespace autd3::internal::native_methods
