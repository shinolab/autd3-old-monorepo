name: Release python patch

on:
  push:
    tags:
    - 'py-patch-v*'

jobs:
  publish_pypi:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install twine wheel build
        cd python
        python download_bin.py
    - name: Build whl
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd python
        python -m build -w -C="--build-option=--plat-name" -C="--build-option=manylinux1-x86_64"
    - name: Build whl
      if: matrix.os == 'windows-latest'
      run: |
        cd python
        python -m build -w -C="--build-option=--plat-name" -C="--build-option=win-amd64"
    - name: Build whl
      if: matrix.os == 'macos-latest'
      run: |
        cd python
        python -m build -w -C="--build-option=--plat-name" -C="--build-option=macosx-10-13-x86_64"
        python -m build -w -C="--build-option=--plat-name" -C="--build-option=macosx-11-0-arm64"
    - name: Publish
      run: |
        cd python
        twine upload dist/* -u ${{ secrets.TWINE_USERNAME }} -p ${{ secrets.TWINE_PASS }} --non-interactive --skip-existing


  publish_pypi-linux-arm32:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install twine wheel build
        cd python
        python download_bin.py --arch armv7
    - name: Build whl
      run: |
        cd python
        python -m build -w -C="--build-option=--plat-name" -C="--build-option=linux_armv7l"
    - name: Publish
      run: |
        cd python
        twine upload dist/* -u ${{ secrets.TWINE_USERNAME }} -p ${{ secrets.TWINE_PASS }} --non-interactive --skip-existing


  publish_pypi-linux-aarch64:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install twine wheel build
        cd python
        python download_bin.py --arch aarch64
    - name: Build whl
      run: |
        cd python
        python -m build -w -C="--build-option=--plat-name" -C="--build-option=manylinux2014_aarch64"
    - name: Publish
      run: |
        cd python
        twine upload dist/* -u ${{ secrets.TWINE_USERNAME }} -p ${{ secrets.TWINE_PASS }} --non-interactive --skip-existing

