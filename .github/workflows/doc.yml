name: Doxygen

on:
  push:
    branches: [ doc ]  

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Document check
      run: |
        cd tools/doc_checker
        cargo run -- "../../doc/book/src/jp/FFI/reference.md"
        cargo run -- "../../doc/book/src/en/FFI/reference.md"

  check-cs:
    name: build cs
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v3
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'
    - name: build
      run: |
        dotnet build ./doc/book/samples/cs/cs.csproj -c:Release

  check-cpp:
    name: build cpp
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v3
    - name: build
      run: |
        mkdir build
        cd build
        cmake .. -DBUILD_LINK_SOEM=ON -DBUILD_GAIN_HOLO=OFF -DDISABLE_EXAMPLES=ON
        cmake --build . --parallel 8
        cd ..
        \cp -r include/ ./doc/book/samples/cpp/
        mkdir ./doc/book/samples/cpp/lib
        \cp build/lib/*.a  ./doc/book/samples/cpp/lib
        \cp -r 3rdparty/eigen/ ./doc/book/samples/cpp/
        cd ./doc/book/samples/cpp
        mkdir build
        cd build
        cmake ..
        cmake --build . --parallel 8

  check-nim:
    name: build nim
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v3
    - uses: jiro4989/setup-nim-action@v1
    - name: build
      run: |
        cd doc/book/samples/nim/sample
        nimble build -Y

  check-rust:
    name: build rust
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v3
    - name: build
      run: |
        cd doc/book/samples/rust/sample
        cargo build

  check-julia:
    name: build julia
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v3
    - name: Set up Julia
      uses: julia-actions/setup-julia@v1
      with:
        version: 1.8.2
    - name: build deps
      run: |
        julia -e 'using Pkg; Pkg.add("StaticArrays"); Pkg.build("StaticArrays")'
        julia -e 'using Pkg; Pkg.add(url="https://github.com/shinolab/autd3.git", subdir="julia"); Pkg.build("AUTD3")'
    - name: build
      run: |
        cd doc/book/samples/julia
        echo a | julia sample.jl || true

  check-python:
    name: build python
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v3
    - name: install deps
      run: |
        python -m pip install --upgrade pyautd3
        python -m pip install --upgrade numpy
    - name: build
      run: |
        cd doc/book/samples/python
        echo a | python main.py || true

  build:
    needs: [check, check-cs, check-rust, check-nim, check-cpp, check-julia, check-python]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Doxygen
      uses: ./.github/actions/cmake-doxygen-actions
    - name: mv doxygen doc_build
      run: |
        mkdir -p doc_build
        sudo mv ./build/doc/doxygen/html ./doc_build/api
    - name: Setup mdbook
      uses: peaceiris/actions-mdbook@v1
      with:
        mdbook-version: '0.4.25'
    - name: Setup mdbook-linkcheck
      run: |
        mkdir -p mdbook-linkcheck
        cd mdbook-linkcheck
        curl -L https://github.com/Michael-F-Bryan/mdbook-linkcheck/releases/latest/download/mdbook-linkcheck.x86_64-unknown-linux-gnu.zip -o mdbook-linkcheck.zip
        unzip mdbook-linkcheck.zip
        chmod +x mdbook-linkcheck
        sudo ln -s $PWD/mdbook-linkcheck /usr/local/bin/mdbook-linkcheck
    - name: Setup mdbook-toc
      run: |
        mkdir -p mdbook-toc
        cd mdbook-toc
        curl -L https://github.com/badboy/mdbook-toc/releases/download/0.11.0/mdbook-toc-0.11.0-x86_64-unknown-linux-gnu.tar.gz -o mdbook-toc.tar.gz
        tar -xvf mdbook-toc.tar.gz
        chmod +x mdbook-toc
        sudo ln -s $PWD/mdbook-toc /usr/local/bin/mdbook-toc
    - name: Setup mdbook-katex
      run: |
        mkdir -p mdbook-katex
        cd mdbook-katex
        curl -L https://github.com/lzanini/mdbook-katex/releases/download/v0.3.3/mdbook-katex-v0.3.3-x86_64-unknown-linux-gnu.tar.gz -o mdbook-katex.tar.gz
        tar -xvf mdbook-katex.tar.gz
        chmod +x mdbook-katex
        sudo ln -s $PWD/mdbook-katex /usr/local/bin/mdbook-katex
    - name: Build book
      run: |
        cd ./doc/book
        MDBOOK_BOOK__src=src/en mdbook build --dest-dir book/en
        MDBOOK_BOOK__src=src/jp mdbook build --dest-dir book/jp
    - name: mv mdbook doc
      run: |
        mkdir -p doc_build/book
        sudo mv ./doc/book/book/en/html ./doc_build/book/en
        sudo mv ./doc/book/book/jp/html ./doc_build/book/jp
    - run: |
        cd doc/fpga
        mdbook build
    - name: mv fpga doc
      run: |
        sudo mv ./doc/fpga/book/html ./doc_build/fpga
    - run: |
        cd doc/cpu
        mdbook build
    - name: mv cpu doc
      run: |
        sudo mv ./doc/cpu/book/html ./doc_build/cpu
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./doc_build
