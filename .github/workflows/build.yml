name: build

on:
  push:
    tags-ignore:
      - v*
    branches:
      - 'dev'

env:
  CARGO_INCREMENTAL: 0

jobs:
  build:
    name: build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Build src on ${{ matrix.os }}
      if: matrix.os == 'windows-latest'
      run: |
        cd src
        cargo build
        cargo test --workspace --exclude autd3-link-soem --exclude autd3-simulator --exclude autd3-geometry-viewer --exclude autd3-backend-cuda -- --skip test_timer
    - name: Build src on ${{ matrix.os }}
      if: matrix.os != 'windows-latest'
      run: |
        cd src
        cargo build
        cargo test -- --skip test_timer
    - name: Build examples on ${{ matrix.os }}
      if: matrix.os == 'windows-latest'
      run: |
        cd examples
        cargo build --bins --features "remote_soem twincat remote_twincat simulator_client" 
    - name: Build examples on ${{ matrix.os }}
      if: matrix.os != 'windows-latest'
      run: |
        cd examples
        cargo build --bins --features "soem remote_soem twincat remote_twincat simulator_client" 
    - name: Build capi on ${{ matrix.os }}
      if: matrix.os == 'windows-latest'
      run: |
        cd capi
        cargo build
        cargo test --workspace --exclude autd3capi-link-soem --exclude autd3capi-simulator --exclude autd3capi-geometry-viewer --exclude autd3capi-backend-cuda
    - name: Build capi on ${{ matrix.os }}
      if: matrix.os != 'windows-latest'
      run: |
        cd capi
        cargo build
        cargo test

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: lint src
      run: |
        cd src
        cargo clippy -- -D warnings
    - name: lint examples
      run: |
        cd examples
        cargo clippy -- -D warnings
    - name: lint capi
      run: |
        cd capi
        cargo clippy -- -D warnings
