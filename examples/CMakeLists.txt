cmake_minimum_required(VERSION 3.21)

if(NOT BUILD_EXAMPLES)
  return()
endif()

find_package(Threads REQUIRED)

file(GLOB hpp_files tests/*.hpp runner.hpp)

add_library(autd3_example_common INTERFACE)
target_link_libraries(autd3_example_common INTERFACE autd3)
if(BUILD_GAIN_HOLO)
  target_link_libraries(autd3_example_common INTERFACE gain_holo)
  target_link_libraries(autd3_example_common INTERFACE backend_eigen)
  target_compile_definitions(autd3_example_common INTERFACE BUILD_GAIN_HOLO)
endif()
if(BUILD_MODULATION_AUDIO_FILE)
  target_link_libraries(autd3_example_common INTERFACE modulation_audio_file)
  target_compile_definitions(autd3_example_common INTERFACE BUILD_MODULATION_AUDIO_FILE)
  target_compile_definitions(autd3_example_common INTERFACE AUTD3_RESOURCE_PATH="${PROJECT_SOURCE_DIR}/examples/resources")
endif()
if(NOT WIN32)
  target_link_libraries(autd3_example_common INTERFACE ${CMAKE_THREAD_LIBS_INIT})
endif()

if(BUILD_LINK_SOEM)
  add_executable(example_soem soem.cpp ${hpp_files})
  target_link_libraries(example_soem autd3_example_common link_soem)
  set_target_properties(example_soem PROPERTIES FOLDER "example")
endif()

if(BUILD_LINK_EMEM)
  add_executable(example_emem emem.cpp ${hpp_files})
  target_link_libraries(example_emem autd3_example_common link_emem)
  set_target_properties(example_emem PROPERTIES FOLDER "example")
endif()

if(BUILD_LINK_TWINCAT)
  if(WIN32)
    add_executable(example_twincat twincat.cpp ${hpp_files})
    target_link_libraries(example_twincat autd3_example_common link_twincat)
    set_target_properties(example_twincat PROPERTIES FOLDER "example")
  endif()
endif()

if(BUILD_LINK_REMOTE_TWINCAT)
  add_executable(example_remote_twincat remote_twincat.cpp ${hpp_files})
  target_link_libraries(example_remote_twincat autd3_example_common link_remote_twincat)
  set_target_properties(example_remote_twincat PROPERTIES FOLDER "example")
endif()

if(BUILD_LINK_REMOTE_SOEM)
  add_executable(example_remote_soem remote_soem.cpp ${hpp_files})
  target_link_libraries(example_remote_soem autd3_example_common link_remote_soem)
  set_target_properties(example_remote_soem PROPERTIES FOLDER "example")
endif()

if(BUILD_LINK_DEBUG)
  add_executable(example_debug debug.cpp ${hpp_files})
  target_link_libraries(example_debug autd3_example_common link_debug)
  set_target_properties(example_debug PROPERTIES FOLDER "example")

  add_executable(example_freq_config freq_config.cpp)
  target_link_libraries(example_freq_config autd3_example_common link_debug)
  set_target_properties(example_freq_config PROPERTIES FOLDER "example")
endif()

if(BUILD_GEOMETRY_VIEWER)
  add_executable(example_geometry_viewer geometry_viewer.cpp)
  target_link_libraries(example_geometry_viewer autd3 geometry_viewer)
  set_target_properties(example_geometry_viewer PROPERTIES FOLDER "example")
endif()

if(BUILD_SIMULATOR)
  add_executable(example_simulator_server simulator_server.cpp)
  target_include_directories(example_simulator_server PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_link_libraries(example_simulator_server simulator)
  set_target_properties(example_simulator_server PROPERTIES FOLDER "example")
endif()

if (BUILD_LINK_SIMULATOR)
  add_executable(example_simulator_client simulator_client.cpp)
  target_link_libraries(example_simulator_client PRIVATE autd3_example_common link_simulator)
  set_target_properties(example_simulator_client PROPERTIES FOLDER "example")

  add_executable(example_custom_device custom_device.cpp)
  target_link_libraries(example_custom_device PRIVATE autd3_example_common link_simulator)
  set_target_properties(example_custom_device PROPERTIES FOLDER "example")
endif()
