// This file is autogenerated
using System;
using System.Runtime.InteropServices;

#if UNITY_2020_2_OR_NEWER
#nullable enable
#endif

namespace AUTD3Sharp
{
    namespace NativeMethods
    {
        internal static class LinkSOEM
        {
            private const string DLL = "autd3capi_link_soem";

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public static extern IntPtr AUTDGetAdapterPointer(out uint len);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public static extern void AUTDGetAdapter(IntPtr adapters, uint idx, byte[] desc, byte[] name);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public static extern void AUTDFreeAdapterPointer(IntPtr adapters);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public static extern LinkPtr AUTDLinkSOEM();

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public static extern LinkPtr AUTDLinkSOEMSendCycle(LinkPtr soem, ushort cycle);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public static extern LinkPtr AUTDLinkSOEMSync0Cycle(LinkPtr soem, ushort cycle);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public static extern LinkPtr AUTDLinkSOEMBufSize(LinkPtr soem, uint bufSize);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public static extern LinkPtr AUTDLinkSOEMTimerStrategy(LinkPtr soem, TimerStrategy timerStrategy);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public static extern LinkPtr AUTDLinkSOEMSyncMode(LinkPtr soem, SyncMode mode);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public static extern LinkPtr AUTDLinkSOEMIfname(LinkPtr soem, string ifname);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public static extern LinkPtr AUTDLinkSOEMStateCheckInterval(LinkPtr soem, uint intervalMs);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public static extern LinkPtr AUTDLinkSOEMOnLost(LinkPtr soem, IntPtr onLostFunc);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public static extern LinkPtr AUTDLinkSOEMLogLevel(LinkPtr soem, Level level);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public static extern LinkPtr AUTDLinkSOEMLogFunc(LinkPtr soem, IntPtr outFunc, IntPtr flushFunc);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public static extern LinkPtr AUTDLinkSOEMTimeout(LinkPtr soem, ulong timeoutNs);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public static extern LinkPtr AUTDLinkRemoteSOEM(string addr, byte[] err);

            [DllImport(DLL, CallingConvention = CallingConvention.Cdecl)] public static extern LinkPtr AUTDLinkRemoteSOEMTimeout(LinkPtr soem, ulong timeoutNs);
        }
    }

    public enum SyncMode : byte
    {
        FreeRun = 0,
        Dc = 1,
    }

}

#if UNITY_2020_2_OR_NEWER
#nullable disable
#endif


